
Опис:
Есть постоянный набор обслуживаемых классов (например, запчасти автомобиля).
Нужно иметь возможность гибко добавлять  классы, которые обслуживают, не используя приведения типов.

__________
Реалізація:
1. Є інтерфейс Element з методом  "void accept(Visitor visitor)"
2. 4 класи, які реалізують інтерфейс Element: BodyElement, EngineElement, CarElement,WheelElement.
   кожен з яких на  вхід метода visit передає себе в якості обєкта
3. клас CarElement, який містить масив з усіма обєктами типу Element
4. Є інтерфейс Visitor з 4ма методами visit, які на вхід потребують обєкти класів BodyElement, EngineElement,
 CarElement,WheelElement
5. 2 класи HooliganVisitor та HMechanicalVisitor, які для всіх елементів
BodyElement, EngineElement, CarElement,WheelElement реалізують свій функціонал

______
Використання:
1) поведенческий шаблон проектирования, описывающий операцию, которая выполняется над объектами других классов.
При изменении visitor нет необходимости изменять обслуживаемые классы.
2)Если есть вероятность изменения иерархии обслуживаемого класса, либо она будет нестабильной или открытый интерфейс
достаточно эффективен для доступа шаблона, то его использование будет вредоносным.
