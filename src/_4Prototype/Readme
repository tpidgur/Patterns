Опис:
Паттерн используется чтобы:
1.избежать дополнительных усилий по созданию объекта стандартным путём
(имеется в виду использование конструктора, так как в этом случае также будут вызваны конструкторы всей
 иерархии предков объекта), когда это непозволительно дорого для приложения.
2.избежать наследования создателя объекта (object creator) в клиентском приложении, как это делает паттерн abstract factory.

___________
Реалізація:
1. interface Copyable з методом Object copy();
2. клас Human (реалізує Copyable), має 2 поля:  age та name; метод copy() повертає новий екземпляр Human із заданими
 полями
3. клас HumanFactory має поле Human, силка на який визначається при ініціалізації, та метод який повертає копію обєкта
Human
____________
Використання:
Используйте этот шаблон проектирования, когда системe безразлично как именно в ней создаются, компонуются и
представляются продукты:
1.инстанцируемые классы определяются во время выполнения, например с помощью динамической загрузки;
2.избежать построения иерархий классов или фабрик, параллельных иерархии классов продуктов;
3.экземпляры класса могут находиться в одном из нескольких различных состояний.
Может оказаться удобнее установить соответствующее число прототипов и клонировать их, а не инстанцировать каждый раз
 класс вручную в подходящем состоянии.